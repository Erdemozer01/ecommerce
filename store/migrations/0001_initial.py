# Generated by Django 5.1.3 on 2024-12-23 17:08

import autoslug.fields
import django.db.models.deletion
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('info', 'Mavi'), ('danger', 'Kırmızı'), ('success', 'Yeşil'), ('facebook', 'Facebook'), ('dribbble', 'Pembe')], max_length=50, verbose_name='Tema')),
                ('icon', models.CharField(choices=[('bell', 'Çan'), ('exclamation-circle', 'Ünlem'), ('thumbs-up', 'Okey'), ('thumbs-down', 'Onaylamıyorum'), ('fire', 'Alev')], max_length=50, verbose_name='İşaret')),
                ('title', models.CharField(help_text='Konu max 20 karekter ve kısa sekilde olmalıdır.', max_length=20, verbose_name='Konu')),
                ('content', models.CharField(max_length=100, verbose_name='Mesaj')),
                ('url', models.URLField(blank=True, verbose_name='Ayrıntılar için tıklayın urlsi')),
                ('is_publish', models.BooleanField(default=False, verbose_name='Yayınlansın mı ? ')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Yayınlanma Tarihi')),
            ],
            options={
                'verbose_name': 'Anasayfa Duyuru',
                'verbose_name_plural': 'Anasayfa Duyuruları',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100, verbose_name='Konu')),
                ('name', models.CharField(max_length=100, verbose_name='Ad Soyad')),
                ('email', models.EmailField(max_length=100, verbose_name='E-posta Adresi')),
                ('message', models.TextField(verbose_name='Mesaj')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
            ],
            options={
                'verbose_name': 'İletişim',
                'verbose_name_plural': 'İletişim',
                'db_table': 'contact',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='NewsLetter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Konu')),
                ('image', models.ImageField(blank=True, null=True, upload_to='bülten/', verbose_name='Konu Fotosu')),
                ('context', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Mesaj')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
            ],
            options={
                'verbose_name': 'bülten',
                'verbose_name_plural': 'Bültenler',
                'db_table': 'news_letter',
                'ordering': ['-created'],
                'get_latest_by': '-created',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Kategori:')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title', unique=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
            ],
            options={
                'verbose_name': 'Ürün Kategori',
                'verbose_name_plural': 'Ürün Kategorileri',
                'db_table': 'product_category',
            },
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='E-posta Adresi')),
            ],
            options={
                'verbose_name': 'Abonelik',
                'verbose_name_plural': 'Abonelikler',
                'db_table': 'subscribe',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart_id', models.CharField(blank=True, editable=False, max_length=500, unique=True, verbose_name='Sepet İD')),
                ('total', models.FloatField(blank=True, editable=False, null=True, verbose_name='Toplam:')),
                ('app_promo', models.BooleanField(default=False, verbose_name='Promosyon uygulandı ? ')),
                ('promo', models.CharField(blank=True, max_length=100, verbose_name='Kampanya Kodu')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('customer', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='carts', to='accounts.profile', verbose_name='Müşteri:')),
            ],
            options={
                'verbose_name': 'Sepet',
                'verbose_name_plural': 'Sepetim',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(editable=False, max_length=1000, verbose_name='Ürün Kodu')),
                ('title', models.CharField(max_length=250, unique=True, verbose_name='Product Title:')),
                ('image', models.ImageField(upload_to='product/', verbose_name='Ürün Kapak Fotosu:')),
                ('brand', models.CharField(max_length=100, verbose_name='Ürün Markası')),
                ('text', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Ürün Açıklaması')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title', unique=True)),
                ('price', models.FloatField(help_text='Not: Vergi dahil fiyatı giriniz', verbose_name='Fiyat')),
                ('money_symbol', models.CharField(default='TL', help_text='TL, $, vs...', max_length=100, verbose_name='Para birimi')),
                ('discount', models.PositiveSmallIntegerField(blank=True, default=None, help_text='Yüzde indirimi girin. ÖR: 10 girdiğinizde fiyata yüzde 10 indirim uygulanacaktır.', null=True, verbose_name='İndirim(%) ')),
                ('discount_price', models.FloatField(blank=True, editable=False, null=True, verbose_name='İndirimli Fiyat')),
                ('discount_type', models.CharField(choices=[('P', 'Percent'), ('C', 'Cash')], default='P', max_length=2, verbose_name='İndirim türü')),
                ('is_discount', models.BooleanField(blank=True, default=False, editable=False, verbose_name='İndirimli ürün ?')),
                ('stock', models.PositiveIntegerField(verbose_name='stok')),
                ('sale_count', models.PositiveIntegerField(default=0, help_text='Ürünün kaç tane satıldığını gösterir', verbose_name='Satış adeti')),
                ('is_available', models.CharField(choices=[('SY', 'Satıştan Kaldırıldı'), ('SV', 'Satışta')], default='SV', max_length=2, verbose_name='Satış Durumu')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('dislikes', models.ManyToManyField(blank=True, related_name='product_disliked', to=settings.AUTH_USER_MODEL, verbose_name='Ürünü beğenmeyenler')),
                ('likes', models.ManyToManyField(blank=True, related_name='product_liked', to=settings.AUTH_USER_MODEL, verbose_name='Ürünü beğenenler')),
                ('wish_list', models.ManyToManyField(blank=True, related_name='wish_list', to=settings.AUTH_USER_MODEL, verbose_name='İstek listesi')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_category', to='store.productcategory', verbose_name='Kategori')),
            ],
            options={
                'verbose_name': 'Ürün',
                'verbose_name_plural': 'Ürünler',
                'db_table': 'product',
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='CartItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Miktar')),
                ('items_total', models.FloatField(blank=True, editable=False, null=True, verbose_name='Ara Toplam:')),
                ('is_ordered', models.BooleanField(default=False, verbose_name='Satın alındı mı ?')),
                ('is_valid', models.BooleanField(default=False, verbose_name='Sepet Onaylandı mı ?')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.cart', verbose_name='Sepet')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_product', to='store.product', verbose_name='Ürün')),
            ],
            options={
                'verbose_name': 'Ürün',
                'verbose_name_plural': 'Sepetim',
            },
        ),
        migrations.CreateModel(
            name='ProductComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Yorum:')),
                ('is_approved', models.BooleanField(default=True, verbose_name='Onaylı yorum')),
                ('report_count', models.PositiveIntegerField(default=0, verbose_name='Kötüye Kullanım bildirim sayısı')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Yorum Tarihi')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_comment', to='store.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_username', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ürün Yorumu',
                'verbose_name_plural': 'Ürün Yorumları',
                'db_table': 'product_comment',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product/', verbose_name='Ürün Fotosu:')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='store.product')),
            ],
            options={
                'verbose_name': 'Ürün Resmi',
                'verbose_name_plural': 'Ürün Resimleri',
                'db_table': 'product_images',
                'get_latest_by': 'image',
            },
        ),
        migrations.CreateModel(
            name='PromoCodeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promo_name', models.CharField(max_length=100, verbose_name='Kampanya Adı')),
                ('promo_desc', models.TextField(verbose_name='Kampanya Açıklaması')),
                ('promo_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='İndirim Kodu')),
                ('promo', models.PositiveIntegerField(verbose_name='İndirim')),
                ('promo_type', models.CharField(choices=[('per', 'Yüzde'), ('cash', 'Nakit')], default='per', help_text='İndirimin ugulanma şekli', max_length=100, verbose_name='İndirim Türü')),
                ('promo_start_date', models.DateTimeField(auto_now_add=True, verbose_name='Kampanya Başlangıcı')),
                ('promo_end_date', models.DateTimeField(blank=True, null=True, verbose_name='İndirimin Son Tarih')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturuma Tarihi')),
                ('customer', models.ManyToManyField(blank=True, related_name='applied_code', to='accounts.profile', verbose_name='Kampanyadan Yararlanan Kullanıcılar')),
            ],
            options={
                'verbose_name': 'Promosyon Kodu',
                'verbose_name_plural': 'Promosyon Kodları',
                'ordering': ['-created'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created'], name='product_created_faa237_idx'),
        ),
        migrations.AddIndex(
            model_name='productcomments',
            index=models.Index(fields=['created'], name='product_com_created_4f9ef1_idx'),
        ),
    ]
